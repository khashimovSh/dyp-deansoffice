plugins {
	id 'idea'
	id 'java-library'
	id 'jacoco'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'java'
	id 'com.avast.gradle.docker-compose' version '0.14.13'
	id 'maven-publish'
}

group = 'dyp.security'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 17
targetCompatibility = 17

apply from: "${rootProject.projectDir}/libraries.gradle"

dependencies {
	implementation (
			libraries.cassandraMigration,
			libraries.springDataCassandra,
			libraries.springBootSecurity,
			libraries.springBootStarterWeb,
			libraries.jwt,
			libraries.javaPersistence,
			libraries.jakarta,
			libraries.glassFish,
	)
	implementation 'commons-collections:commons-collections:3.2.1:sources'
	implementation 'com.google.code.gson:gson:2.3.1:sources'
	testImplementation (
			testLibraries.springBootTest,
			testLibraries.springSecurityTest
	)
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
}

test {
	useJUnitPlatform()
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

configurations {
	doc {
		transitive false
	}
}

javadoc {
	source configurations.doc.collect { zipTree(it) }
	include '**/*.java'
	options.addStringOption('Xdoclint:none', '-quiet')
}

publishing {
	repositories {
		maven {
			url 'https://deansoffice.jfrog.io/artifactory/default-maven-local'
			credentials {
				username = "${artifactory_user}"
				password = "${artifactory_password}"
			}
		}
	}
	publications {
		mavenJava(MavenPublication) {
			groupId project.group
			artifactId project.name
			version version
			from components.java
		}
	}
}
